buildscript {
  repositories {
    mavenCentral()
  }
}

plugins {
  id 'java'
  id "org.jetbrains.kotlin.jvm" version "1.9.10"
  id 'idea'
  id 'com.github.johnrengelman.shadow' version '7.1.2'
  id 'net.researchgate.release' version '3.0.2'
}

group 'xyz.poeschl.pixelmaze'

sourceCompatibility = JavaVersion.VERSION_17

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
  implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.1'
  implementation 'io.github.microutils:kotlin-logging-jvm:3.0.5'
  implementation 'ch.qos.logback:logback-classic:1.4.5'
  implementation 'com.xenomachina:kotlin-argparser:2.0.7'
  implementation 'xyz.poeschl:Kixelflut:2.1.0'
  implementation files('libs/SwingMazeDemo-0.0.1-SNAPSHOT-jar-with-dependencies-2020-03-06.jar')

  testImplementation(platform('org.junit:junit-bom:5.9.3'))
  testImplementation 'org.junit.jupiter:junit-jupiter'
  testImplementation 'com.willowtreeapps.assertk:assertk-jvm:0.26.1'
}


compileKotlin {
  kotlinOptions.jvmTarget = project.sourceCompatibility
}
compileTestKotlin {
  kotlinOptions.jvmTarget = project.sourceCompatibility
}

test {
  useJUnitPlatform()

  testLogging {
    events 'failed', 'passed', 'skipped'
    exceptionFormat 'full'
    showStackTraces true
  }
}

jar {
  manifest {
    attributes 'Main-Class': 'xyz.poeschl.pixelmaze.MazeDrawerKt'
  }
}

shadowJar {
  archiveClassifier.set('')
}

import java.util.regex.Matcher

release {
  buildTasks = []
  preTagCommitMessage = ':bookmark: pre tag commit: '
  tagCommitMessage = ':bookmark: creating tag: '
  newVersionCommitMessage = ':bookmark: new version commit: '
  git {
    requireBranch.set('main')
  }
  versionPatterns = [
      /(\d+)\.(\d+)\.(\d+)([^\d]*$)/: { Matcher m, Project p -> m.replaceAll("${m[0][1]}.${(m[0][2] as int) + 1}.${m[0][3]}${m[0][4]}") }
  ]
}
