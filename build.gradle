buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'java'
    id "org.jetbrains.kotlin.jvm" version "1.6.10"
    id 'idea'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'net.researchgate.release' version '2.8.1'
}

group 'xyz.poeschl.pixelmaze'

sourceCompatibility = JavaVersion.VERSION_15

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.0'
    implementation 'io.github.microutils:kotlin-logging-jvm:2.1.23'
    implementation 'ch.qos.logback:logback-classic:1.2.10'
    implementation 'com.xenomachina:kotlin-argparser:2.0.7'
    implementation 'xyz.poeschl:Kixelflut:2.0.1'
    implementation files('libs/SwingMazeDemo-0.0.1-SNAPSHOT-jar-with-dependencies-2020-03-06.jar')

    testImplementation(platform('org.junit:junit-bom:5.8.2'))
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'com.willowtreeapps.assertk:assertk-jvm:0.25'
}


compileKotlin {
    kotlinOptions.jvmTarget = project.sourceCompatibility
}
compileTestKotlin {
    kotlinOptions.jvmTarget = project.sourceCompatibility
}

test {
    useJUnitPlatform()

    testLogging {
        events 'failed', 'passed', 'skipped'
        exceptionFormat 'full'
        showStackTraces true
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'xyz.poeschl.pixelmaze.MazeDrawerKt'
    }
}

shadowJar {
    archiveClassifier.set('')
}

import java.util.regex.Matcher

release {
    buildTasks = []
    preTagCommitMessage = ':bookmark: pre tag commit: '
    tagCommitMessage = ':bookmark: creating tag: '
    newVersionCommitMessage = ':bookmark: new version commit: '
    git {
        requireBranch = 'master'
    }
    versionPatterns = [
            /(\d+)\.(\d+)\.(\d+)([^\d]*$)/: { Matcher m, Project p -> m.replaceAll("${m[0][1]}.${(m[0][2] as int) + 1}.${m[0][3]}${m[0][4]}") }
    ]
}
